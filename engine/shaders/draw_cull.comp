#version 460
#include "lib/common.glsl"
#include "lib/object.glsl"
#include "lib/ubo.glsl"

layout (constant_id = 0) const bool k_late = false;

layout (local_size_x = 64) in;

DECLARE_UBO(0, 0);
DECLARE_DRAW_BUFFER(0, 3);
DECLARE_OBJECT_BUFFER(0, 4);

void main() {
    uint object_index = gl_GlobalInvocationID.x;
    if (object_index >= g_object_count) {
        return;
    }

    if (k_late) {
        g_draw_count = 0;
        return;
    }

    Object object = g_objects[object_index];
    uint draw_index = atomicAdd(g_draw_count, 1);
    g_draws[draw_index].index_count = object.index_count;
    g_draws[draw_index].instance_count = 1;
    g_draws[draw_index].first_index = object.first_index;
    g_draws[draw_index].vertex_offset = object.vertex_offset;
    g_draws[draw_index].first_instance = 0;
    g_draws[draw_index].object_index = object_index;
}
